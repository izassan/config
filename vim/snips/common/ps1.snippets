snippet wobj "Where-Object"
Where-Object { $1 ${2:-eq} $3 }
endsnippet

snippet sobj "Sort-Object"
Sort-Object
endsnippet

snippet selobj "Select-Object"
Select-Object -Property $1
endsnippet

snippet forobj "ForEach-Object"
ForEach-Object { $1 }
endsnippet

snippet forobjp "ForEach-Object -Parallel"
ForEach-Object -Parallel {
	$1
} -ThrottleLimit ${2:100}
endsnippet

snippet echo "Write-Host"
Write-Host "$1"
endsnippet

snippet echoe "Write-Error"
Write-Error "$1"
endsnippet

snippet echod "Write-Debug"
Write-Debug "$1"
endsnippet

snippet func "standard function"
function $1(){
	$2
}
endsnippet

snippet param "standard function with arguments"
Param(
	$2
)
endsnippet

snippet mandatory "mandatory parameter"
[Parameter(Mandatory)]$1
endsnippet

snippet validateset "validateset"
[ValidateSet($1)]$2
endsnippet

snippet opxlsx "open excel"
$excel = New-Object -ComObject Excel.Application
$excel.Visible = $false

$workbook = $excel.Workbooks.Open((Convert-Path ${1:path.xlsx}))
endsnippet

snippet clxlsx "close excel"
# 保存して終了する
${1:workbook}.Close($false)
${2:excel}.Quit()

# COMオブジェクトの解放
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($1) | Out-Null
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($2) | Out-Null
[GC]::Collect()
endsnippet
