set number
set laststatus=2
set showcmd
set autochdir
set noswapfile
set nobackup
set viminfo=
set noundofile
set hidden
set confirm
set wildmenu
set wildmode=longest,full
set autoindent
set smartindent
set expandtab
set tabstop=4 softtabstop=4 shiftwidth=4
set hlsearch
set ignorecase
set smartcase
set nowrapscan
set incsearch
set encoding=utf-8
set fileencodings=utf-8,iso-2022-jp,enc-jp,sjis
set fileformats=unix,dos,mac
set backspace=indent,eol,start
set helplang=ja,en
set spelllang=en,cjk
set matchtime=1
set pumheight=5
set title
set showmatch
set modeline
set modelines=5
set completeopt+=menuone
set foldmethod=indent
set t_u7=
set t_RV=
set t_Co=256
scriptencoding utf-8

if has('win32')
    let $PATH='c:\msys64\mingw64\bin;c:\msys64\usr\bin;'.$PATH
    let $VIMUSERCONFIGDIR=expand("$HOME/vimfiles")
else
    let $VIMUSERCONFIGDIR=expand("$HOME/.vim")
endif
let g:no_vimrc_example=1
let g:no_gvimrc_example=1

" define plugins
call plug#begin(expand("$VIMUSERCONFIGDIR/plugins"))
Plug 'vim-jp/vimdoc-ja'
Plug 'itchyny/lightline.vim'
Plug 'cocopon/vaffle.vim'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'thinca/vim-quickrun'
Plug 'thinca/vim-qfreplace'
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'bronson/vim-trailing-whitespace'
Plug 'machakann/vim-sandwich'
Plug 'cohama/lexima.vim'
Plug 'previm/previm', {'for': 'markdown'}
Plug 'tyru/open-browser.vim', {'for': 'markdown'}
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'mattn/emmet-vim', {'for': 'html'}
Plug 'mattn/vim-sonictemplate'
Plug 'junegunn/fzf.vim'
Plug 'junegunn/fzf'
Plug 'vim-skk/eskk.vim'
Plug 'tpope/vim-fugitive'
Plug 'glidenote/memolist.vim'
Plug 'mattn/vim-maketable'
Plug 'kana/vim-operator-user'
Plug 'kana/vim-textobj-user'
Plug 'mopp/vim-operator-convert-case'
Plug 'lambdalisue/readablefold.vim'
if has('python3')
    Plug 'SirVer/ultisnips'
    Plug 'prabirshrestha/asyncomplete-ultisnips.vim'
endif
call plug#end()

let s:plugs = get(s:, 'plugs', get(g:, 'plugs', {}))
function! FindPlugin(name) abort
  return has_key(s:plugs, a:name) ? isdirectory(s:plugs[a:name].dir) : 0
endfunction
command! -nargs=1 UsePlugin if !FindPlugin(<args>) | finish | endif

runtime! _config/*.vim

" colorscheme
syntax enable
if filereadable(expand("$VIMUSERCONFIGDIR/colors/molokai.vim"))
    colorscheme molokai
endif

" local vim configuration
let s:local_vimrc = expand("$HOME/.dotfiles.local/vim/vimrc.local")
if filereadable(s:local_vimrc)
    runtime s:local_vimrc
endif
