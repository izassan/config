" Load Fucntions
runtime! functions.vim


" Color
set t_Co=256
set background=dark
if filereadable(GetIcebergPath())
    colorscheme iceberg
endif


" General
set number
set title
set wildmenu
set history=10000
set showmatch
set matchtime=1
set mouse=""
set fileformats=unix,dos,mac
set backspace=indent,eol,start
set modeline


" Indent
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent


" Search
set ignorecase
set smartcase
set wrapscan
set incsearch
set hlsearch


" Backup
set nowritebackup
set nobackup
set noswapfile


" Display
set noerrorbells
set cmdheight=1
set laststatus=2
set ambiwidth=double
set showcmd
set display=lastline


" GVim configuration
if has("gui_running")
    set guioptions-=T
    set guioptions-=m
    set guioptions+=a
    set guioptions+=R
endif


" Python3
if has("win32")
let s:pythonthreehome = expand("$HOME/AppData/Local/Programs/Python/Python312")
let s:pythonthreedll = expand("$HOME/AppData/Local/Programs/Python/Python312/python312.dll")
let &pythonthreehome=s:pythonthreehome
let &pythonthreedll=s:pythonthreedll
endif


" Custom Commands
command! -nargs=0 ConfigInit :call ConfigInit()
command! -nargs=0 CopyFileContent :call CopyFileContent()


" Key mapping
nnoremap <Space> <Nop>
nnoremap <Space>je :e .<CR>
nnoremap + <C-a>
nnoremap - <C-x>
inoremap jj <ESC>
nnoremap Y y$
nnoremap <C-h> :nohlsearch<CR>
nnoremap sj <C-w>j
nnoremap sk <C-w>k
nnoremap sh <C-w>h
nnoremap sl <C-w>l
nnoremap <C-c> :CopyFileContent<CR>
let g:use_shell = has("win32") ? "pwsh" : "zsh"
nnoremap <Space>t :execute("terminal ++close " . g:use_shell)<CR>
nnoremap <Space>T :execute("terminal ++curwin ++close " . g:use_shell)<CR>

" Plugin manage
if !filereadable(GetVimPlugPath())
    finish
endif

call plug#begin()
Plug 'itchyny/lightline.vim'
Plug 'tpope/vim-commentary'
Plug 'cocopon/vaffle.vim'
Plug 'machakann/vim-sandwich'
Plug 'cohama/lexima.vim'
Plug 'mattn/vim-sonictemplate'
Plug 'thinca/vim-qfreplace'
Plug 'thinca/vim-quickrun'
Plug 'previm/previm'
Plug 'tyru/open-browser.vim'
Plug 'mattn/vim-maketable'

Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'

if has('python3')
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'prabirshrestha/asyncomplete-ultisnips.vim'
endif

if executable("fzf")
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
endif
call plug#end()


" Plugin configuration (netrw)
let g:netrw_banner=0
let g:netrw_sizestyle="H"
let g:netrw_liststyle=1
let g:netrw_timefmt="%Y/%m/%d(%a) %H:%M:%S"
let g:netrw_preview=1
let g:netrw_home=expand("$HOME")

let g:loaded_netrw = 1
let g:loaded_netrwPlugin = 1


" Plugin configuration (lightline.vim)
let g:lightline = {
\   'colorscheme': 'wombat',
\}


" Plugin configuration (vim-lsp)
let g:lsp_diagnostics_echo_cursor=1

" for debug
" let g:lsp_log_file = expand('~/vim-lsp.log')

nnoremap [LSP] <Nop>
nmap <Space>l [LSP]

nnoremap [LSP]r :LspRename<CR>
nnoremap [LSP]a :LspCodeAction<CR>


" Plugin configuration (vim-lsp-settings)
if has("win32")
    let g:lsp_settings = {
    \   'powershell-languageserver': {
    \       'cmd': [ expand(GetVimConfigDir() . '/scripts/powershell-core-languageserver.cmd') ],
    \   },
    \}
endif


" Plugin configuration (asyncomplete.vim)
let g:asyncomplete_auto_completeopt=0
set completeopt=menuone,noinsert,noselect,preview


" Plugin configuration (vim-sonictemplate)
let g:sonictemplate_vim_template_dir = [
\    expand(GetVimConfigDir() . "/templates"),
\    expand("$HOME/local_config/vim/templates"),
\]


" Plugin configuration (vaffle.vim)
let g:vaffle_auto_cd=1
let g:vaffle_force_delete=1
let g:vaffle_open_selected_split_position='rightbelow'
let g:vaffle_open_selected_vsplit_position='rightbelow'


" Plugin configuration (ultisnips)
let g:UltiSnipsEnableSnipMate=0
let g:UltiSnipsSnippetStorageDirectoryForUltiSnipsEdit = expand(GetVimConfigDir() . "/snips/common")
let g:UltiSnipsSnippetDirectories = [
\    expand(GetVimConfigDir() . "/snips/common"),
\    expand("$HOME/local_config/vim/snips/common")
\]

if has('python3')
    let g:UltiSnipsExpandTrigger="<Tab>"
    call asyncomplete#register_source(asyncomplete#sources#ultisnips#get_source_options({
        \ 'name': 'ultisnips',
        \ 'allowlist': ['*'],
        \ 'completor': function('asyncomplete#sources#ultisnips#completor'),
        \ }))
endif

let g:UltiSnipsExpandTrigger="<Tab>"
let g:UltiSnipsJumpForwardTrigger="<Tab>"
let g:UltiSnipsJumpBackwardTrigger="<S-Tab>"


" Load Local Configuration
set runtimepath+=$HOME/local_config/vim
